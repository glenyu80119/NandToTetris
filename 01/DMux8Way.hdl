// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Not(in=sel[0], out=notsel0);
	Not(in=sel[1], out=notsel1);
	Not(in=sel[2], out=notsel2);
	
	And(a=in, b=notsel1, out=temp1);
	And(a=notsel2, b=notsel0, out=temp2);
	And(a=temp1, b=temp2, out=a);
	
	And(a=in, b=notsel2, out=temp3);
	And(a=notsel1, b=sel[0], out=temp4);
	And(a=temp3, b=temp4, out=b);
	
	And(a=in, b=notsel2, out=temp5);
	And(a=notsel0, b=sel[1], out=temp6);
	And(a=temp5, b=temp6, out=c);
	
	And(a=in, b=notsel2, out=temp7);
	And(a=sel[1], b=sel[0], out=temp8);
	And(a=temp7, b=temp8, out=d);
	
	And(a=in, b=notsel0, out=temp9);
	And(a=notsel1, b=sel[2], out=temp10);
	And(a=temp9, b=temp10, out=e);
	
	And(a=in, b=sel[2], out=temp11);
	And(a=notsel1, b=sel[0], out=temp12);
	And(a=temp11, b=temp12, out=f);
	
	And(a=in, b=sel[2], out=temp13);
	And(a=sel[1], b=notsel0, out=temp14);
	And(a=temp13, b=temp14, out=g);
	
	And(a=in, b=sel[2], out=temp15);
	And(a=sel[1], b=sel[0], out=temp16);
	And(a=temp15, b=temp16, out=h);

}